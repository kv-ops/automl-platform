[pytest]
# Configuration for pytest-asyncio to avoid deprecation warning
asyncio_default_fixture_loop_scope = function

# Additional recommended pytest configurations
minversion = 6.0
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Output options
addopts = 
    -v
    --tb=short
    --strict-markers
    --disable-warnings
    -p no:warnings

# Markers definition (if you use custom markers)
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    asyncio: marks coroutine-based tests that rely on pytest-asyncio

# Coverage options (if using pytest-cov)
[coverage:run]
source = src
omit = 
    */tests/*
    */test_*.py
    */__init__.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstract