# AutoML Platform pyproject configuration using PEP 621

## Build system configuration
##
# Use the modern setuptools build backend.  Setuptools version 61 or
# newer is required to support PEP 621 in pyproject.toml.  The wheel
# package is included so that `python -m build` can produce wheels.

[build-system]
requires = [
  "setuptools>=61",
  "wheel"
]
build-backend = "setuptools.build_meta"

## Project metadata
##
# This section contains the package metadata normally provided to
# `setup()` in setup.py.  Fields like `name`, `version` and `description`
# are required, while others (authors, license, URLs) provide useful
# context for downstream users.  Dependencies defined here correspond
# to the `install_requires` list from setup.py and are required for
# core operation of the AutoML platform.

[project]
name = "automl-platform"
version = "3.1.0"
description = "Enterprise AutoML platform with MLOps, distributed training, and production deployment"
readme = { file = "README.md" }
requires-python = ">=3.9,<3.13"
license = { text = "MIT" }
authors = [
  { name = "AutoML Platform Team", email = "team@automl-platform.com" }
]

# Core dependencies required by the platform at runtime.  These
# packages align with the `install_requires` list in setup.py and
# include machine‑learning libraries, configuration tools, API
# frameworks, storage and security layers, MLOps integration and a
# handful of utilities.  Keep this list in sync with requirements.txt
# and setup.py to avoid divergence.
dependencies = [
  # Core ML libraries
  "pandas>=2.0.0,<3.0.0",
  "numpy>=1.24.0,<2.0.0",
  "scikit-learn>=1.3.0,<2.0.0",
  "scipy>=1.11.0,<2.0.0",
  "joblib>=1.3.0",

  # Configuration & validation
  "pyyaml>=6.0.1",
  "pydantic>=2.5.0,<3.0.0",
  "python-dotenv>=1.0.0",

  # AutoML core
  "optuna>=3.4.0,<4.0.0",
  "xgboost>=2.0.0,<3.0.0",
  "lightgbm>=4.0.0,<5.0.0",
  "catboost>=1.2.0,<2.0.0",
  "imbalanced-learn>=0.10.0,<1.0.0",

  # API framework
  "fastapi>=0.104.0,<1.0.0",
  "uvicorn[standard]>=0.24.0,<1.0.0",
  "starlette>=0.27.0",

  # HTTP & core auth
  "httpx>=0.25.0",
  "authlib>=1.2.0",
  "requests>=2.31.0",

  # Storage
  "sqlalchemy>=2.0.0",
  "psycopg2-binary>=2.9.0",
  "redis>=5.0.0",

  # Security
  "cryptography>=41.0.0",
  "pyjwt>=2.8.0",
  "passlib[bcrypt]>=1.7.4",

  # MLOps core
  "mlflow>=2.9.0,<3.0.0",

  # Utilities
  "tqdm>=4.66.0",
  "click>=8.1.0",
  "prometheus-client>=0.19.0",

  # Additional utilities aligned with requirements.txt
  "python-multipart>=0.0.6",
  "aiofiles>=23.2.0",
  "aiohttp>=3.9.0",
  "tabulate>=0.9.0",
  "tenacity>=8.2.0",
  "psutil>=5.9.6",
  "openpyxl>=3.1.0",
  "pyarrow>=14.0.0",
]

# Optional dependency groups (extras)
#
# Each extra here corresponds to a logical feature area of the
# platform.  Install one or more extras to extend the platform with
# authentication backends, GPU acceleration, distributed training,
# hyper‑parameter optimization, explainability, time series, NLP,
# computer vision, advanced APIs, storage backends, distributed
# computing, MLOps, orchestration, model export, streaming,
# feature stores, data connectors, monitoring & observability, LLM
# integrations, visualization, development/testing, documentation and
# cloud provider support.  The meta‑extras `gpu-complete`, `all`,
# `enterprise` and `production` aggregate groups of extras to
# simplify installation.

[project.optional-dependencies]

auth = [
  "python-keycloak>=3.7.0",
  "python-saml>=1.15.0",
  "okta>=2.9.0",
  "python-jose[cryptography]>=3.3.0",
]

gpu = [
  "cupy-cuda11x>=12.0.0,<13.0.0",
  "numba[cuda]>=0.58.0",
  "gputil>=1.4.0",
  "nvidia-ml-py3>=7.352.0",
  "pynvml>=11.5.0",
  "gpustat>=1.1.1",
  "onnxruntime-gpu>=1.16.0,<2.0.0",
  "pytorch-memlab>=0.3.0",
  "torch-tb-profiler>=0.4.0",
]

distributed-gpu = [
  "horovod>=0.28.0,<1.0.0",
  "fairscale>=0.4.0,<1.0.0",
  "deepspeed>=0.12.0,<1.0.0",
]

automl-gpu = [
  "autogluon[torch]>=1.0.0",
  "nni>=3.0,<4.0",
]

serving-gpu = [
  "tritonclient[all]>=2.40.0",
]

gpu-alt = [
  "jax[cuda11_pip]>=0.4.20",
]

sso = [
  "python-keycloak>=3.7.0",
  "python-saml>=1.15.0",
  "okta>=2.9.0",
  "authlib>=1.2.0",
]

hpo = [
  "optuna-dashboard>=0.13.0",
  "hyperopt>=0.2.7",
  "scikit-optimize>=0.9.0",
]

deep = [
  "tensorflow>=2.15.0,<3.0.0",
  "torch>=2.1.0,<3.0.0",
  "torchvision>=0.16.0,<1.0.0",
  "torchaudio>=2.1.0,<3.0.0",
  "pytorch-tabnet>=4.1.0",
  "pytorch-lightning>=2.1.0",
  "transformers>=4.36.0",
]

explain = [
  "shap>=0.43.0",
  "lime>=0.2.0",
  "eli5>=0.13.0",
  "interpret>=0.4.0",
  "alibi>=0.9.0",
]

timeseries = [
  "statsmodels>=0.14.0",
  "prophet>=1.1.5",
  "pmdarima>=2.0.0",
  "sktime>=0.24.0",
  "tsfresh>=0.20.0",
  "darts>=0.26.0",
]

nlp = [
  "sentence-transformers>=2.2.0",
  "nltk>=3.8.0",
  "spacy>=3.7.0",
  "gensim>=4.3.0",
  "textblob>=0.17.0",
]

vision = [
  "opencv-python>=4.8.0",
  "pillow>=10.0.0",
  "albumentations>=1.3.0",
  "torchvision>=0.16.0",
]

api = [
  "python-multipart>=0.0.6",
  "aiofiles>=23.2.0",
  "websockets>=12.0",
  "slowapi>=0.1.9",
  "gunicorn>=21.2.0",
]

storage = [
  "alembic>=1.13.0",
  "pymongo>=4.6.0",
  "minio>=7.2.0",
  "boto3>=1.34.0",
  "google-cloud-storage>=2.10.0",
  "azure-storage-blob>=12.19.0",
]

distributed = [
  "ray[default,train,tune]>=2.8.0,<3.0.0",
  "dask[complete]>=2023.12.0",
  "celery[redis]>=5.3.0",
  "flower>=2.0.0",
]

mlops = [
  "dvc>=3.48.0",
  "wandb>=0.16.0",
  "neptune-client>=1.8.0",
  "bentoml>=1.1.0",
  "evidently>=0.4.0",
  "great-expectations>=0.18.0",
]

orchestration = [
  "apache-airflow>=2.8.0",
  "prefect>=2.14.0",
  "dagster>=1.6.0",
  "kedro>=0.19.0",
]

export = [
  "onnx>=1.15.0,<2.0.0",
  "onnxruntime>=1.16.0,<2.0.0",
  "skl2onnx>=1.16.0,<2.0.0",
  "sklearn2pmml>=0.104.0",
  "tensorflow-lite>=2.15.0",
  "coremltools>=7.1",
]

streaming = [
  "kafka-python>=2.0.2",
  "confluent-kafka>=2.3.0",
  "pulsar-client>=3.4.0",
  "redis-py-cluster>=2.1.0",
  "faust-streaming>=0.10.0",
]

feature-store = [
  "feast>=0.36.0",
  "featuretools>=1.28.0",
]

connectors = [
  "snowflake-connector-python>=3.7.0",
  "google-cloud-bigquery>=3.15.0",
  "databricks-connect>=14.1.0",
  "pyodbc>=5.0.1",
  "cx_Oracle>=8.3.0",
  "cassandra-driver>=3.29.0",
  "elasticsearch>=8.12.0",
]

monitoring = [
  "opentelemetry-api>=1.22.0",
  "opentelemetry-sdk>=1.22.0",
  "opentelemetry-instrumentation-fastapi>=0.43b0",
  "jaeger-client>=4.8.0",
  "sentry-sdk>=1.40.0",
  "datadog>=0.49.0",
]

llm = [
  "openai>=1.10.0",
  "anthropic>=0.8.0",
  "langchain>=0.1.0",
  "langchain-community>=0.0.20",
  "llama-index>=0.10.0",
  "chromadb>=0.4.22",
  "tiktoken>=0.6.0",
]

viz = [
  "matplotlib>=3.8.0",
  "seaborn>=0.13.0",
  "plotly>=5.18.0",
  "altair>=5.2.0",
  "bokeh>=3.3.0",
  "holoviews>=1.18.0",
  "streamlit>=1.30.0",
]

dev = [
  "pytest>=8.0.0",
  "pytest-cov>=4.1.0",
  "pytest-asyncio>=0.23.0",
  "pytest-mock>=3.12.0",
  "pytest-benchmark>=4.0.0",
  "hypothesis>=6.98.0",
  "faker>=22.0.0",
  "factory-boy>=3.3.0",
  "black>=24.0.0",
  "ruff>=0.2.0",
  "mypy>=1.8.0",
  "isort>=5.13.0",
  "pre-commit>=3.6.0",
  "bandit>=1.7.0",
  "safety>=3.0.0",
]

docs = [
  "sphinx>=7.2.0",
  "sphinx-rtd-theme>=2.0.0",
  "sphinx-autodoc-typehints>=1.25.0",
  "sphinx-copybutton>=0.5.0",
  "myst-parser>=2.0.0",
  "jupyter-book>=0.15.0",
]

cloud = [
  "boto3>=1.34.0",
  "s3fs>=2024.2.0",
  "google-cloud-bigquery>=3.15.0",
  "google-cloud-storage>=2.10.0",
  "azure-storage-blob>=12.19.0",
  "snowflake-connector-python>=3.7.0",
  "databricks-sql-connector>=2.9.0",
]

# GPU complete: aggregate GPU acceleration extras (gpu + deep + distributed-gpu + automl-gpu + serving-gpu)
gpu-complete = [
  "cupy-cuda11x>=12.0.0,<13.0.0",
  "numba[cuda]>=0.58.0",
  "gputil>=1.4.0",
  "nvidia-ml-py3>=7.352.0",
  "pynvml>=11.5.0",
  "gpustat>=1.1.1",
  "onnxruntime-gpu>=1.16.0,<2.0.0",
  "pytorch-memlab>=0.3.0",
  "torch-tb-profiler>=0.4.0",
  "tensorflow>=2.15.0,<3.0.0",
  "torch>=2.1.0,<3.0.0",
  "torchvision>=0.16.0,<1.0.0",
  "torchaudio>=2.1.0,<3.0.0",
  "pytorch-tabnet>=4.1.0",
  "pytorch-lightning>=2.1.0",
  "transformers>=4.36.0",
  "horovod>=0.28.0,<1.0.0",
  "fairscale>=0.4.0,<1.0.0",
  "deepspeed>=0.12.0,<1.0.0",
  "autogluon[torch]>=1.0.0",
  "nni>=3.0,<4.0",
  "tritonclient[all]>=2.40.0",
]

# All: union of every optional dependency defined above.  Duplicates
# have been removed and order preserved for readability.  Install
# `automl-platform[all]` to enable every optional feature.
all = [
  "python-keycloak>=3.7.0",
  "python-saml>=1.15.0",
  "okta>=2.9.0",
  "python-jose[cryptography]>=3.3.0",
  "cupy-cuda11x>=12.0.0,<13.0.0",
  "numba[cuda]>=0.58.0",
  "gputil>=1.4.0",
  "nvidia-ml-py3>=7.352.0",
  "pynvml>=11.5.0",
  "gpustat>=1.1.1",
  "onnxruntime-gpu>=1.16.0,<2.0.0",
  "pytorch-memlab>=0.3.0",
  "torch-tb-profiler>=0.4.0",
  "horovod>=0.28.0,<1.0.0",
  "fairscale>=0.4.0,<1.0.0",
  "deepspeed>=0.12.0,<1.0.0",
  "autogluon[torch]>=1.0.0",
  "nni>=3.0,<4.0",
  "tritonclient[all]>=2.40.0",
  "jax[cuda11_pip]>=0.4.20",
  "authlib>=1.2.0",
  "optuna-dashboard>=0.13.0",
  "hyperopt>=0.2.7",
  "scikit-optimize>=0.9.0",
  "tensorflow>=2.15.0,<3.0.0",
  "torch>=2.1.0,<3.0.0",
  "torchvision>=0.16.0,<1.0.0",
  "torchaudio>=2.1.0,<3.0.0",
  "pytorch-tabnet>=4.1.0",
  "pytorch-lightning>=2.1.0",
  "transformers>=4.36.0",
  "shap>=0.43.0",
  "lime>=0.2.0",
  "eli5>=0.13.0",
  "interpret>=0.4.0",
  "alibi>=0.9.0",
  "statsmodels>=0.14.0",
  "prophet>=1.1.5",
  "pmdarima>=2.0.0",
  "sktime>=0.24.0",
  "tsfresh>=0.20.0",
  "darts>=0.26.0",
  "sentence-transformers>=2.2.0",
  "nltk>=3.8.0",
  "spacy>=3.7.0",
  "gensim>=4.3.0",
  "textblob>=0.17.0",
  "opencv-python>=4.8.0",
  "pillow>=10.0.0",
  "albumentations>=1.3.0",
  "torchvision>=0.16.0",
  "python-multipart>=0.0.6",
  "aiofiles>=23.2.0",
  "websockets>=12.0",
  "slowapi>=0.1.9",
  "gunicorn>=21.2.0",
  "alembic>=1.13.0",
  "pymongo>=4.6.0",
  "minio>=7.2.0",
  "boto3>=1.34.0",
  "google-cloud-storage>=2.10.0",
  "azure-storage-blob>=12.19.0",
  "ray[default,train,tune]>=2.8.0,<3.0.0",
  "dask[complete]>=2023.12.0",
  "celery[redis]>=5.3.0",
  "flower>=2.0.0",
  "dvc>=3.48.0",
  "wandb>=0.16.0",
  "neptune-client>=1.8.0",
  "bentoml>=1.1.0",
  "evidently>=0.4.0",
  "great-expectations>=0.18.0",
  "apache-airflow>=2.8.0",
  "prefect>=2.14.0",
  "dagster>=1.6.0",
  "kedro>=0.19.0",
  "onnx>=1.15.0,<2.0.0",
  "onnxruntime>=1.16.0,<2.0.0",
  "skl2onnx>=1.16.0,<2.0.0",
  "sklearn2pmml>=0.104.0",
  "tensorflow-lite>=2.15.0",
  "coremltools>=7.1",
  "kafka-python>=2.0.2",
  "confluent-kafka>=2.3.0",
  "pulsar-client>=3.4.0",
  "redis-py-cluster>=2.1.0",
  "faust-streaming>=0.10.0",
  "feast>=0.36.0",
  "featuretools>=1.28.0",
  "snowflake-connector-python>=3.7.0",
  "google-cloud-bigquery>=3.15.0",
  "databricks-connect>=14.1.0",
  "pyodbc>=5.0.1",
  "cx_Oracle>=8.3.0",
  "cassandra-driver>=3.29.0",
  "elasticsearch>=8.12.0",
  "opentelemetry-api>=1.22.0",
  "opentelemetry-sdk>=1.22.0",
  "opentelemetry-instrumentation-fastapi>=0.43b0",
  "jaeger-client>=4.8.0",
  "sentry-sdk>=1.40.0",
  "datadog>=0.49.0",
  "openai>=1.10.0",
  "anthropic>=0.8.0",
  "langchain>=0.1.0",
  "langchain-community>=0.0.20",
  "llama-index>=0.10.0",
  "chromadb>=0.4.22",
  "tiktoken>=0.6.0",
  "matplotlib>=3.8.0",
  "seaborn>=0.13.0",
  "plotly>=5.18.0",
  "altair>=5.2.0",
  "bokeh>=3.3.0",
  "holoviews>=1.18.0",
  "streamlit>=1.30.0",
  "pytest>=8.0.0",
  "pytest-cov>=4.1.0",
  "pytest-asyncio>=0.23.0",
  "pytest-mock>=3.12.0",
  "pytest-benchmark>=4.0.0",
  "hypothesis>=6.98.0",
  "faker>=22.0.0",
  "factory-boy>=3.3.0",
  "black>=24.0.0",
  "ruff>=0.2.0",
  "mypy>=1.8.0",
  "isort>=5.13.0",
  "pre-commit>=3.6.0",
  "bandit>=1.7.0",
  "safety>=3.0.0",
  "sphinx>=7.2.0",
  "sphinx-rtd-theme>=2.0.0",
  "sphinx-autodoc-typehints>=1.25.0",
  "sphinx-copybutton>=0.5.0",
  "myst-parser>=2.0.0",
  "jupyter-book>=0.15.0",
  "boto3>=1.34.0",
  "s3fs>=2024.2.0",
  "azure-storage-blob>=12.19.0",
  "databricks-sql-connector>=2.9.0",
]

# Enterprise: curated selection of extras for production deployments.  This
# group includes API servers, storage connectors, distributed computing,
# MLOps, observability and essential authentication features.  It
# intentionally omits GPU acceleration and development tools.
enterprise = [
  "python-multipart>=0.0.6",
  "aiofiles>=23.2.0",
  "websockets>=12.0",
  "slowapi>=0.1.9",
  "gunicorn>=21.2.0",
  "alembic>=1.13.0",
  "pymongo>=4.6.0",
  "minio>=7.2.0",
  "boto3>=1.34.0",
  "google-cloud-storage>=2.10.0",
  "azure-storage-blob>=12.19.0",
  "ray[default,train,tune]>=2.8.0,<3.0.0",
  "dask[complete]>=2023.12.0",
  "celery[redis]>=5.3.0",
  "flower>=2.0.0",
  "dvc>=3.48.0",
  "wandb>=0.16.0",
  "neptune-client>=1.8.0",
  "bentoml>=1.1.0",
  "evidently>=0.4.0",
  "great-expectations>=0.18.0",
  "opentelemetry-api>=1.22.0",
  "opentelemetry-sdk>=1.22.0",
  "opentelemetry-instrumentation-fastapi>=0.43b0",
  "jaeger-client>=4.8.0",
  "sentry-sdk>=1.40.0",
  "datadog>=0.49.0",
  "python-keycloak>=3.7.0",
  "python-saml>=1.15.0",
  "okta>=2.9.0",
  "python-jose[cryptography]>=3.3.0",
  "authlib>=1.2.0",
  "apache-airflow>=2.8.0",
  "prefect>=2.14.0",
  "dagster>=1.6.0",
  "kedro>=0.19.0",
  "onnx>=1.15.0,<2.0.0",
  "onnxruntime>=1.16.0,<2.0.0",
  "skl2onnx>=1.16.0,<2.0.0",
  "sklearn2pmml>=0.104.0",
  "tensorflow-lite>=2.15.0",
  "coremltools>=7.1",
  "kafka-python>=2.0.2",
  "confluent-kafka>=2.3.0",
  "pulsar-client>=3.4.0",
  "redis-py-cluster>=2.1.0",
  "faust-streaming>=0.10.0",
  "boto3>=1.34.0",
  "s3fs>=2024.2.0",
  "google-cloud-bigquery>=3.15.0",
  "databricks-sql-connector>=2.9.0",
]

# Production: minimal set of packages for running the API and workers in
# containers or Kubernetes.  These packages are separate from other
# extras because they are used to orchestrate deployments rather than
# implement platform features.
production = [
  "gunicorn>=21.2.0",
  "supervisor>=4.2.0",
  "docker>=7.0.0",
  "kubernetes>=29.0.0",
]

[project.urls]
Documentation = "https://docs.automl-platform.com"
API = "https://api.automl-platform.com/docs"
Bug-Tracker = "https://github.com/automl-platform/automl-platform/issues"
Source = "https://github.com/automl-platform/automl-platform"
Changelog = "https://github.com/automl-platform/automl-platform/blob/main/CHANGELOG.md"
Docker-Hub = "https://hub.docker.com/r/automl-platform/automl"
Helm-Charts = "https://charts.automl-platform.com"
Slack-Community = "https://automl-platform.slack.com"
Commercial-Support = "https://automl-platform.com/support"
