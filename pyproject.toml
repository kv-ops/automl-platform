[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "automl-platform"
version = "3.1.0"  # Updated from 3.0.0 to match current version
description = "Production-ready AutoML platform with enterprise features"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "AutoML Platform Team", email = "team@automl-platform.com"}
]
keywords = [
    "automl",
    "machine-learning",
    "data-science",
    "artificial-intelligence",
    "mlops",
    "distributed-computing",
    "feature-engineering",
    "hyperparameter-optimization",
    "model-deployment",
    "enterprise-ml",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Environment :: Console",
    "Environment :: Web Environment",
]

# Core dependencies (minimal set)
dependencies = [
    # Core ML
    "pandas>=2.0.0,<3.0.0",
    "numpy>=1.24.0,<2.0.0",
    "scikit-learn>=1.3.0,<2.0.0",
    "scipy>=1.11.0,<2.0.0",
    "joblib>=1.3.0",
    
    # Configuration
    "pyyaml>=6.0.1",
    "pydantic>=2.5.0,<3.0.0",
    "python-dotenv>=1.0.0",
    
    # AutoML
    "optuna>=3.4.0,<4.0.0",
    "xgboost>=2.0.0,<3.0.0",
    "lightgbm>=4.0.0,<5.0.0",
    "catboost>=1.2.0,<2.0.0",
    
    # API
    "fastapi>=0.104.0,<1.0.0",
    "uvicorn[standard]>=0.24.0,<1.0.0",
    
    # Storage
    "sqlalchemy>=2.0.0",
    "redis>=5.0.0",
    
    # MLOps
    "mlflow>=2.9.0,<3.0.0",
    
    # Visualization
    "streamlit>=1.29.0",
    "plotly>=5.18.0",
]

[project.optional-dependencies]
# Cloud connectors
cloud = [
    "boto3>=1.29.0",
    "s3fs>=2023.12.0",
    "google-cloud-bigquery>=3.11.0",
    "google-cloud-storage>=2.10.0",
    "azure-storage-blob>=12.19.0",
    "snowflake-connector-python>=3.0.0",
    "databricks-sql-connector>=2.9.0",
]

# LLM integration
llm = [
    "openai>=1.3.0",
    "anthropic>=0.7.0",
    "langchain>=0.0.340",
    "langchain-community>=0.0.10",
    "chromadb>=0.4.18",
    "tiktoken>=0.5.1",
]

# Streaming
streaming = [
    "kafka-python>=2.0.2",
    "confluent-kafka>=2.3.0",
    "pulsar-client>=3.3.0",
]

# Distributed computing
distributed = [
    "ray[default,train,tune]>=2.8.0,<3.0.0",
    "dask[complete]>=2023.12.0",
    "celery>=5.3.0",
]

# SSO and authentication
sso = [
    "python-keycloak>=3.7.0",
    "auth0-python>=4.4.0",
    "okta>=2.9.0",
    "authlib>=1.2.0",
]

# Deep learning
deep = [
    "torch>=2.1.0,<3.0.0",
    "torchvision>=0.16.0,<1.0.0",
    "tensorflow>=2.15.0,<3.0.0",
    "pytorch-tabnet>=4.1.0",
]

# Feature store
feature-store = [
    "feast>=0.35.0",
]

# AutoML alternatives
automl = [
    "autogluon>=1.0.0",
    "h2o>=3.44.0",
    "flaml>=2.1.0",
    "pycaret>=3.2.0",
]

# Monitoring
monitoring = [
    "prometheus-client>=0.19.0",
    "evidently>=0.4.0",
    "datadog>=0.47.0",
    "sentry-sdk>=1.39.0",
]

# Development tools
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.11.0",
    "flake8>=6.1.0",
    "mypy>=1.7.0",
    "isort>=5.13.0",
    "pre-commit>=3.5.0",
]

# Documentation
docs = [
    "sphinx>=7.2.0",
    "sphinx-rtd-theme>=2.0.0",
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.5.0",
]

# All optional dependencies for enterprise deployment
enterprise = [
    "automl-platform[cloud]",
    "automl-platform[llm]",
    "automl-platform[streaming]",
    "automl-platform[distributed]",
    "automl-platform[sso]",
    "automl-platform[monitoring]",
    "automl-platform[feature-store]",
]

# Complete installation (all features)
all = [
    "automl-platform[enterprise]",
    "automl-platform[deep]",
    "automl-platform[automl]",
    "automl-platform[dev]",
    "automl-platform[docs]",
]

[project.urls]
Homepage = "https://github.com/automl-platform/automl-platform"
Documentation = "https://automl-platform.readthedocs.io"
Repository = "https://github.com/automl-platform/automl-platform"
Issues = "https://github.com/automl-platform/automl-platform/issues"
Changelog = "https://github.com/automl-platform/automl-platform/blob/main/CHANGELOG.md"

[project.scripts]
# CLI entry points
automl = "automl_platform.cli.main:cli"
automl-train = "automl_platform.cli.train:train_cli"
automl-predict = "automl_platform.cli.predict:predict_cli"
automl-api = "automl_platform.api.app:main"
automl-ui = "automl_platform.ui.streamlit_app:main"

[tool.setuptools]
packages = ["automl_platform"]
include-package-data = true

[tool.setuptools.package-data]
automl_platform = ["*.yaml", "*.yml", "*.json", "templates/*.html", "static/*"]

[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | venv
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = false
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["automl_platform"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__init__.py",
    "*/migrations/*",
    "*/config.py",
    "*/settings.py",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
sort = "Cover"

[tool.ruff]
line-length = 100
target-version = "py39"
select = ["E", "F", "I", "N", "W", "B", "UP"]
ignore = ["E501", "B008", "B905"]
exclude = [
    ".git",
    "__pycache__",
    "docs",
    "build",
    "dist",
    ".venv",
    "venv",
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["S101"]
