[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "automl-platform"
version = "3.0.0"
description = "Production-ready AutoML platform with no data leakage"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "AutoML Platform Team", email = "team@automl-platform.com"}
]
keywords = [
    "automl",
    "machine-learning",
    "data-science",
    "artificial-intelligence",
    "sklearn",
    "pipeline",
    "hyperparameter-optimization",
    "feature-engineering",
    "model-selection",
    "explainability",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Environment :: Console",
    "Environment :: Web Environment",
]

[project.urls]
Homepage = "https://github.com/automl-platform/automl-platform"
Documentation = "https://automl-platform.readthedocs.io"
Repository = "https://github.com/automl-platform/automl-platform"
Issues = "https://github.com/automl-platform/automl-platform/issues"
Changelog = "https://github.com/automl-platform/automl-platform/blob/main/CHANGELOG.md"

[tool.setuptools]
packages = ["automl_platform"]
include-package-data = true

[tool.setuptools.package-data]
automl_platform = ["*.yaml", "*.yml", "*.json", "templates/*.html", "static/*"]

[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | venv
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = false
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["automl_platform"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__init__.py",
    "*/migrations/*",
    "*/config.py",
    "*/settings.py",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
sort = "Cover"

[tool.ruff]
line-length = 100
target-version = "py39"
select = ["E", "F", "I", "N", "W", "B", "UP"]
ignore = ["E501", "B008", "B905"]
exclude = [
    ".git",
    "__pycache__",
    "docs",
    "build",
    "dist",
    ".venv",
    "venv",
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["S101"]
