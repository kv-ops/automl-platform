# Use NVIDIA CUDA base image with Python
FROM nvidia/cuda:11.8.0-cudnn8-runtime-ubuntu22.04

# Set working directory
WORKDIR /app

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    CUDA_VISIBLE_DEVICES=0 \
    DEBIAN_FRONTEND=noninteractive

# Install Python and system dependencies
RUN apt-get update && apt-get install -y \
    python3.11 \
    python3.11-dev \
    python3-pip \
    gcc \
    g++ \
    git \
    curl \
    build-essential \
    libpq-dev \
    libgomp1 \
    && rm -rf /var/lib/apt/lists/*

# Create symlinks for Python
RUN ln -s /usr/bin/python3.11 /usr/bin/python

# Upgrade pip
RUN python -m pip install --upgrade pip

# Copy requirements first for better caching
COPY requirements.txt .
COPY requirements-gpu.txt .

# Install Python dependencies
RUN pip install -r requirements.txt && \
    pip install -r requirements-gpu.txt

# Copy the rest of the application
COPY . .

# Install the package in development mode
RUN pip install -e .

# Create non-root user for security
RUN useradd -m -u 1000 automl && \
    chown -R automl:automl /app

# Switch to non-root user
USER automl

# Expose ports
EXPOSE 8000

# Default command for GPU worker
CMD ["celery", "-A", "automl_platform.worker", "worker", "--loglevel=info", "--concurrency=1", "--queues=gpu,gpu_training,gpu_inference", "--pool=solo"]
